{
	"name": "DF_Cleaning",
	"properties": {
		"description": "Cleaning Data here",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Customer_SQL_Server",
						"type": "DatasetReference"
					},
					"name": "Customers"
				},
				{
					"dataset": {
						"referenceName": "DS_Orders_SQL_Server",
						"type": "DatasetReference"
					},
					"name": "Orders"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Prep_Data",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Customers",
				"source(output(",
				"          OrderID as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as string,",
				"          OrderTimestamp as string,",
				"          Price as string,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Orders",
				"Customers, Orders join(Customers@CustomerID == Orders@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink"
			]
		}
	}
}